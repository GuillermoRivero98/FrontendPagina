{"version":3,"file":"static/js/525.0f97dba7.chunk.js","mappings":"qMAGA,MAuBA,EAvB6BA,IAC3B,MAAOC,EAASC,IAAcC,EAAAA,EAAAA,UAAS,OAChCC,EAASC,IAAcF,EAAAA,EAAAA,WAAS,IAChCG,EAAOC,IAAYJ,EAAAA,EAAAA,UAAS,MAiBnC,OAfAK,EAAAA,EAAAA,YAAU,KACaC,WACnB,IACE,MAAMC,QAAiBC,EAAAA,EAAMC,IAAI,kCAAkCZ,KACnEE,EAAWQ,EAASG,MACpBR,GAAW,EACb,CAAE,MAAOS,GACPP,EAASO,EAAIC,SACbV,GAAW,EACb,GAGFW,EAAc,GACb,CAAChB,IAEG,CAAEC,UAASG,UAASE,QAAO,E,aChBpC,MA6BA,EA7BgBW,KACd,MAAM,GAAEjB,IAAOkB,EAAAA,EAAAA,MACT,QAAEjB,EAAO,QAAEG,EAAO,MAAEE,GAAUa,EAAoBnB,GAExD,OAAII,GACKgB,EAAAA,EAAAA,KAACC,EAAAA,EAAY,CAAAC,UAACF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,kBAGtBhB,GACKc,EAAAA,EAAAA,KAACC,EAAAA,EAAY,CAAAC,UAACC,EAAAA,EAAAA,MAAA,KAAAD,SAAA,CAAG,UAAQhB,QAIhCc,EAAAA,EAAAA,KAACC,EAAAA,EAAY,CAAAC,UACXC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEF,EAAAA,EAAAA,KAACI,EAAAA,EAAK,CAACC,KAAMxB,EAAQyB,MAAOC,MAAO,KACnCP,EAAAA,EAAAA,KAAA,KAAAE,SAAIrB,EAAQ2B,UAEZR,EAAAA,EAAAA,KAAA,KAAAE,SAAIrB,EAAQ4B,cAOD,C","sources":["hook/useFetchArticleById.jsx","components/pages/Article.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst useFetchArticleById = (id) => {\r\n  const [article, setArticle] = useState(null); // Corregido\r\n  const [loading, setLoading] = useState(true); // Corregido\r\n  const [error, setError] = useState(null); // Corregido\r\n\r\n  useEffect(() => {\r\n    const fetchArticle = async () => {\r\n      try {\r\n        const response = await axios.get(`http://localhost:3001/articles/${id}`);\r\n        setArticle(response.data);\r\n        setLoading(false);\r\n      } catch (err) {\r\n        setError(err.message);\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchArticle();\r\n  }, [id]);\r\n\r\n  return { article, loading, error };\r\n};\r\n\r\nexport default useFetchArticleById;\r\n","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport DocViewer from \"react-doc-viewer\"; // Solo si usas archivos binarios/doc\nimport Title from \"../atoms/Title\";\nimport MainTemplate from \"../templates/MainTemplate\";\nimport useFetchArticleById from \"../../hook/useFetchArticleById\";\n\nconst Article = () => {\n  const { id } = useParams();\n  const { article, loading, error } = useFetchArticleById(id);\n\n  if (loading) {\n    return <MainTemplate><p>Cargando...</p></MainTemplate>;\n  }\n\n  if (error) {\n    return <MainTemplate><p>Error: {error}</p></MainTemplate>;\n  }\n\n  return (\n    <MainTemplate>\n      <div>\n        <Title text={article.title} level={2} />\n        <p>{article.author}</p>\n        {/* Si el contenido es texto plano, simplemente mostrar el contenido */}\n        <p>{article.content}</p>\n        \n        {/* Si el contenido es un archivo binario .docx en Base64, usa DocViewer */}\n        {/* article.content && (\n          <DocViewer documents={[{ uri: `data:application/vnd.openxmlformats-officedocument.wordprocessingml.document;base64,${article.content}` }]} />\n        ) */}\n      </div>\n    </MainTemplate>\n  );\n};\n\nexport default Article;\n"],"names":["id","article","setArticle","useState","loading","setLoading","error","setError","useEffect","async","response","axios","get","data","err","message","fetchArticle","Article","useParams","useFetchArticleById","_jsx","MainTemplate","children","_jsxs","Title","text","title","level","author","content"],"sourceRoot":""}