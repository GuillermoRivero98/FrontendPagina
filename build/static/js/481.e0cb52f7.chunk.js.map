{"version":3,"file":"static/js/481.e0cb52f7.chunk.js","mappings":"mLAGA,MAuBA,EAvBcA,IAA8E,IAA7E,KAAEC,EAAO,OAAM,YAAEC,EAAW,MAAEC,EAAK,SAAEC,EAAQ,KAAEC,EAAI,SAAEC,GAAW,GAAON,EACpF,OACEO,EAAAA,EAAAA,KAAA,SACEN,KAAMA,EACNC,YAAaA,EACbC,MAAOA,EACPC,SAAUA,EACVC,KAAMA,EACNC,SAAUA,EACVE,UAAU,eACV,ECGN,EAbcR,IAA4B,IAA3B,QAAES,EAAO,SAAEC,GAAUV,EAChC,OACIO,EAAAA,EAAAA,KAAA,SAAOC,UAAU,QAAQC,QAASA,EAAQC,SACrCA,GACG,E,aCFhB,MAoBA,EApBaV,IAAwC,IAAvC,OAAEW,EAAM,SAAEC,EAAQ,YAAEC,GAAab,EAC7C,OACEc,EAAAA,EAAAA,MAAA,QAAMN,UAAU,OAAOI,SAAUA,EAASF,SAAA,CACvCC,EAAOI,KAAI,CAACC,EAAOC,KAClBH,EAAAA,EAAAA,MAAA,OAAKN,UAAU,aAAYE,SAAA,EACzBH,EAAAA,EAAAA,KAACW,EAAK,CAACT,QAASO,EAAMG,GAAGT,SAAEM,EAAMI,SACjCb,EAAAA,EAAAA,KAACc,EAAK,CACJpB,KAAMe,EAAMf,KACZE,MAAOa,EAAMb,MACbC,SAAUY,EAAMZ,SAChBF,YAAac,EAAMd,YACnBG,KAAMW,EAAMX,SAPiBY,MAWnCV,EAAAA,EAAAA,KAACe,EAAAA,EAAM,CAAAZ,SAAEG,MACJ,ECgBX,EAhCsBb,IAAoB,IAAnB,UAAEuB,GAAWvB,EAChC,MAAOwB,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,KAC5BC,EAAQC,IAAaF,EAAAA,EAAAA,UAAS,KAC9BG,EAASC,IAAcJ,EAAAA,EAAAA,UAAS,IAgBjCf,EAAS,CACX,CAAEN,KAAM,QAASe,MAAO,YAAUnB,KAAM,OAAQE,MAAOqB,EAAOpB,SAAW2B,GAAMN,EAASM,EAAEC,OAAO7B,QACjG,CAAEE,KAAM,SAAUe,MAAO,QAASnB,KAAM,OAAQE,MAAOwB,EAAQvB,SAAW2B,GAAMH,EAAUG,EAAEC,OAAO7B,QACnG,CAAEE,KAAM,UAAWe,MAAO,YAAanB,KAAM,WAAYE,MAAO0B,EAASzB,SAAW2B,GAAMD,EAAWC,EAAEC,OAAO7B,SAGlH,OACII,EAAAA,EAAAA,KAAC0B,EAAAA,EAAY,CAAAvB,UACTH,EAAAA,EAAAA,KAAC2B,EAAI,CAACvB,OAAQA,EAAQC,SAtBTuB,UACjBJ,EAAEK,iBACF,UACUC,EAAAA,EAAeC,cAAc,CAAEd,QAAOG,SAAQE,YACpDN,IACAE,EAAS,IACTG,EAAU,IACVE,EAAW,IACXS,MAAM,mCACV,CAAE,MAAOC,GACLC,QAAQD,MAAM,gCAA8BA,EAChD,GAWkD3B,YAAY,YAC/C,C","sources":["components/atoms/Input.jsx","components/atoms/Label.jsx","components/molecules/Form.jsx","components/pages/SubmitArticle.jsx"],"sourcesContent":["import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Input = ({ type = \"text\", placeholder, value, onChange, name, disabled = false }) => {\r\n  return (\r\n    <input\r\n      type={type}\r\n      placeholder={placeholder}\r\n      value={value}\r\n      onChange={onChange}\r\n      name={name}\r\n      disabled={disabled}\r\n      className=\"input-field\"\r\n    />\r\n  );\r\n};\r\n\r\nInput.propTypes = {\r\n  type: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  name: PropTypes.string,\r\n  disabled: PropTypes.bool,\r\n};\r\n\r\nexport default Input;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Label = ({ htmlFor, children }) => {\r\n    return (\r\n        <label className=\"label\" htmlFor={htmlFor}>\r\n            {children}\r\n        </label>\r\n    );\r\n}\r\n\r\nLabel.propTypes = {\r\n    htmlFor: PropTypes.string.isRequired,\r\n    children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Label;","import React from \"react\";\r\nimport Input from \"../atoms/Input\";\r\nimport Label from \"../atoms/Label\";\r\nimport Button from \"../atoms/Button\";\r\n\r\nconst Form = ({ fields, onSubmit, buttonLabel }) => {\r\n  return (\r\n    <form className=\"form\" onSubmit={onSubmit}>\r\n      {fields.map((field, index) => (\r\n        <div className=\"form-group\" key={index}>\r\n          <Label htmlFor={field.id}>{field.label}</Label>\r\n          <Input\r\n            type={field.type}\r\n            value={field.value}\r\n            onChange={field.onChange}\r\n            placeholder={field.placeholder}\r\n            name={field.name}\r\n          />\r\n        </div>\r\n      ))}\r\n      <Button>{buttonLabel}</Button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React, { useState } from \"react\";\nimport articleService from \"../../services/articleService\"; \nimport MainTemplate from \"../templates/MainTemplate\";\nimport Form from \"../molecules/Form\";\n\nconst SubmitArticle = ({ fetchData }) => {\n    const [title, setTitle] = useState(\"\");\n    const [author, setAuthor] = useState(\"\");\n    const [content, setContent] = useState(\"\");\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        try {\n            await articleService.createArticle({ title, author, content });\n            fetchData(); \n            setTitle(''); \n            setAuthor('');\n            setContent('');\n            alert('Artículo enviado exitosamente');\n        } catch (error) {\n            console.error('Error al crear el artículo', error);\n        }\n    };\n\n    const fields = [\n        { name: \"title\", label: \"Título\", type: \"text\", value: title, onChange: (e) => setTitle(e.target.value) },\n        { name: \"author\", label: \"Autor\", type: \"text\", value: author, onChange: (e) => setAuthor(e.target.value) },\n        { name: \"content\", label: \"Contenido\", type: \"textarea\", value: content, onChange: (e) => setContent(e.target.value) }\n    ];\n\n    return (\n        <MainTemplate>\n            <Form fields={fields} onSubmit={handleSubmit} buttonLabel=\"Enviar\" />\n        </MainTemplate>\n    );\n};\n\nexport default SubmitArticle;\n"],"names":["_ref","type","placeholder","value","onChange","name","disabled","_jsx","className","htmlFor","children","fields","onSubmit","buttonLabel","_jsxs","map","field","index","Label","id","label","Input","Button","fetchData","title","setTitle","useState","author","setAuthor","content","setContent","e","target","MainTemplate","Form","async","preventDefault","articleService","createArticle","alert","error","console"],"sourceRoot":""}